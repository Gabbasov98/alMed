$("._tab").click(function() {
    let parentBlock = $(this).parents("._tabs-parent")
    let tabId = $(this).attr("data-tab")
    console.log(parentBlock)
    $(parentBlock).find("._tab").removeClass("_active")
    $(this).addClass("_active")
    $(parentBlock).find(".tab-content").slideUp(300)
    $(parentBlock).find(`.${tabId}`).slideDown(300)
})

$(".qa-card__show").click(function () {
    $(this).parents(".qa-card").toggleClass("_active")
    $(this).siblings(".qa-card__hidden").slideToggle()
})


$(window).scroll(function() {
    if ($(window).scrollTop() > 100) {
        $(".scroll-up").addClass("scroll-up--active")
    } else {
        $(".scroll-up").removeClass("scroll-up--active")
    }
})

$(".scroll-up").click(function() {
    $(window).scrollTop(0);
})

$("._like-btn").click(function() {
    let count = $(this).find("._count")
    $(this).toggleClass("_active")
    if($(this).hasClass("_active")){
        $(count).html(+$(count).html() + 1)
    } else{
        $(count).html(+$(count).html() - 1)
    }
})

$(".menu-item").hover(onIn, onOut);

$(".menu-item__show").click(function () {
    $(this).parents(".menu-item").toggleClass("_show")
    $(this).siblings(".menu-item__hidden").slideToggle()
})


function onIn() {
    if (window.innerWidth > 992) {
        let el = $(this)
        setTimeout(function() {
            if (el.is(':hover')) {
                console.log(el)
                el.addClass("_show")
            }
        }, 200);
    }
}

function onOut() {
    if (window.innerWidth > 992) {
        $(this).removeClass("_show")
    }
}

$(".burger").click(function () {
    $(".header").toggleClass("_open-menu")
    $("body").toggleClass("fixed-body")
})

function createBannerSliders(el) {
    var swiper = new Swiper(`.${el} .swiper-container`, {
        slidesPerView: 1,
        spaceBetween: 0,
        autoplay: {
            delay: 4000,
        },
        navigation: {
            nextEl: `.${el} .swiper-button-next`,
            prevEl: `.${el} .swiper-button-prev`,
        },
        pagination: {
            el: `.${el} .swiper-pagination`,
            type: 'fraction',
        },
    })
}

createBannerSliders("main-slider")
createBannerSliders("main-slider2")

function Sliders() {
    let SlidersArray = []
    $(".slider").each(function(index, el) {
        $(el).attr("data-slider-id", `${index}`)
        SlidersArray[index] = new Swiper(`.slider[data-slider-id="${index}"] .swiper-container`, {
            slidesPerView: "auto",
            spaceBetween: 0,
            watchSlidesProgress: true,
            preventClicks :true,
            a11y: false,
            noSwipingSelector: "button,.beforeAfter__btn,.beforeAfter__separator",
            navigation: {
                nextEl: `.slider[data-slider-id="${index}"] .swiper-button-next`,
                prevEl: `.slider[data-slider-id="${index}"] .swiper-button-prev`,
            },
            pagination: {
                el: `.slider[data-slider-id="${index}"] .swiper-pagination`,
                type: 'bullets',
                clickable: true,
            },
        })
    })
}

function experienceSlider() {
    var swiper = new Swiper('.experience-slider .swiper-container', {
        slidesPerView: 1,
        spaceBetween: 0,
    })

    swiper.on('slideChange', function () {
        $(".experience__btn").removeClass("_active")
        $(`.experience__btn[data-slide="${swiper.activeIndex}"]`).addClass("_active")
    });

    $(".experience__btn").click(function () {
        $(".experience__btn").removeClass("_active")
        $(this).addClass("_active")
        swiper.slideTo(+$(this).attr("data-slide"))
    })
}


Sliders()
experienceSlider()



$(".analysis-field__item").click(function () {
    $(this).toggleClass("_active")

    renderAnalysisHtml()
})


function renderAnalysisHtml() {
    let value = ""
    $(".analysis__selected").html("")
    $(".analysis-field__item._active").each(function (i,el) {
        let id = $(el).attr("data-id")
        let text = $(el).html().trim()

        if(value === ""){
            value = value + text
        } else{
            value = value + "," + text
        }

        let selectedItemHtml = `
        <div data-id="${id}" class="analysis-item">
            <span class="text16">${text}</span>
            <button type="button" class="analysis-item__remove">
                <svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" viewBox="0 0 30 30" fill="none">
                    <path d="M8.70711 23.0429C8.31658 23.4334 7.68342 23.4334 7.29289 23.0429L6.95711 22.7071C6.56658 22.3166 6.56658 21.6834 6.95711 21.2929L12.5429 15.7071C12.9334 15.3166 12.9334 14.6834 12.5429 14.2929L6.95711 8.70711C6.56658 8.31658 6.56658 7.68342 6.95711 7.29289L7.29289 6.95711C7.68342 6.56658 8.31658 6.56658 8.70711 6.95711L14.2929 12.5429C14.6834 12.9334 15.3166 12.9334 15.7071 12.5429L21.2929 6.95711C21.6834 6.56658 22.3166 6.56658 22.7071 6.95711L23.0429 7.29289C23.4334 7.68342 23.4334 8.31658 23.0429 8.70711L17.4571 14.2929C17.0666 14.6834 17.0666 15.3166 17.4571 15.7071L23.0429 21.2929C23.4334 21.6834 23.4334 22.3166 23.0429 22.7071L22.7071 23.0429C22.3166 23.4334 21.6834 23.4334 21.2929 23.0429L15.7071 17.4571C15.3166 17.0666 14.6834 17.0666 14.2929 17.4571L8.70711 23.0429Z" fill="#31374C"/>
                </svg>
            </button>
        </div>    
        `

        $(".analysis__selected").append(selectedItemHtml)
    })

    $(".analysis__input").val(value)

    $(".analysis-item__remove").click(function () {
        let id = $(this).parents(".analysis-item").attr("data-id")
        $(this).parents(".analysis-item").remove()
        $(`.analysis-field__item[data-id="${id}"]`).removeClass("_active")
    })
}

$(".analysis-field__show").click(function () {
    $(".analysis-field").toggleClass("_active")
})


$(document).mouseup( function(e){ // событие клика по веб-документу
    let div = $( ".analysis-field" ); // тут указываем ID элемента
    if ( !div.is(e.target) // если клик был не по нашему блоку
        && div.has(e.target).length === 0 ) { // и не по его дочерним элементам
        if($(div).hasClass("_active")){
            $(div).removeClass("_active")
        }
    }
});

$(".analysis-card__toggle").click(function () {
    $(this).parents(".analysis-card").toggleClass("_active")
    $(this).parents(".analysis-card").find(".analysis-card__bottom").slideToggle()
})

let modalTogglers = document.querySelectorAll("[data-modal]")
let modals = document.querySelectorAll(".modal")
let body = document.querySelector("body")
let header = document.querySelector(".header")

modalTogglers.forEach(el => {
    el.onclick = function () {
        let modalId = el.getAttribute("data-modal")
        let modal = document.querySelector(`#${modalId}`)
        closeModal()

        body.style.paddingRight = `${getScrollBarSize()[0]}px`
        modal.classList.add("_active")
        body.classList.add("fixed-body")


        document.querySelector(`#${modalId} .modal__close`).onclick = function (e) {
            closeModal()
        }
        document.querySelector(`#${modalId} .modal__bg`).onclick = function (e) {
            closeModal()
        }
    }
})


function closeModal() {
    body.style.paddingRight = 0
    modals.forEach(modal => {
        modal.classList.remove("_active")
        body.classList.remove("fixed-body")
    })
}


var getScrollBarSize = (function() {
    var el = window.document.createElement('textarea'), style = {
        'visibility': 'hidden', 'position': 'absolute', 'zIndex': '-2147483647',
        'top': '-1000px', 'left': '-1000px', 'width': '1000px', 'height': '1000px',
        'overflow': 'scroll', 'margin': '0', 'border': '0', 'padding': '0'
    }, support = el.clientWidth !== undefined && el.offsetWidth !== undefined;

    for (var key in style) {
        if (style.hasOwnProperty(key)) {
            el.style[key] = style[key];
        }
    }

    return function() {
        var size = null;
        if (support && window.document.body) {
            window.document.body.appendChild(el);
            size = [el.offsetWidth - el.clientWidth, el.offsetHeight - el.clientHeight];
            window.document.body.removeChild(el);
        }
        return size;
    };
})();

console.log(getScrollBarSize());

$(".persons input[type='radio']").change(function () {
    let val = $(this).val()
    let parent = $(this).parents(".persons")
    $(parent).find(".persons__content").hide()
    $(parent).find(`.persons__content.${val}`).show()
})

$(".trust-get input[type='checkbox']").change(function () {
    let parent = $(this).parents(".persons")
    if($(this).prop("checked")){
        $(parent).find(".persons__content").show()
    } else{
        $(parent).find(".persons__content").hide()
    }
})


$("._file-upload input").change(function (e) {
    const [file] = e.target.files
    let fileName = file.name
    let fileContainer = $(this).parents(".files")
    if(!$(this).prop("multiple")){
        $(fileContainer).find(".file").remove()
    }
    $(fileContainer).prepend(
        `
        <div class="file">
            <span>${fileName}</span>
            <button type="button" class="file__delete">
                <svg width="12" height="14" viewBox="0 0 12 14" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M1.375 2.00049L10.9993 12.0003" stroke="#31374C" stroke-width="2" stroke-linecap="round"/>
                    <path d="M1 12L10.6243 2.00015" stroke="#31374C" stroke-width="2" stroke-linecap="round"/>
                </svg>
            </button>
        </div>
        `
    )

    $(".file__delete").click(function () {
        let parent = $(this).parents(".files")
        // clearFileInput(parent)
        $(this).parents(".file").remove()
    })
})

$(".file__delete").click(function () {
    let parent = $(this).parents(".files")
    clearFileInput(parent)
})

function clearFileInput(parent) {
    $(parent).find(".file-input input").val('')
    $(parent).find(".file").remove()
}

$(document).ready(function() {
    $('input[type="tel"]').mask('+7 999 999-9999', { autoclear: false }, { placeholder: '+7             ' });
    $(".fg select").niceSelect()



    fix100vh()
    $(window).resize(function () {
        fix100vh()
    })
});

function fix100vh() {
    let vh = window.innerHeight * 0.01;
    document.documentElement.style.setProperty('--vh', `${vh}px`);
}

$('.beforeAfter').beforeAfter({
    movable: true,
    clickMove: true,
    alwaysShow: true,
    position: 50,
    opacity: 1,
    activeOpacity: 1,
    hoverOpacity: 1,
    separatorColor: '#1E2630',
    bulletColor: '#ffffff',
    arrowColor: '#333333',

});

if(localStorage.contrast === 'true') {
    $("html").addClass("_contrast")
} else{
    $("html").removeClass("_contrast")
}


$("._contrast-toggle").click(function () {
    if(localStorage.contrast === 'true'){
        setContrastData(false)
        $("html").removeClass("_contrast")
    } else{
        setContrastData(true)
        $("html").addClass("_contrast")
    }
})


function setContrastData(isContrast) {
    if(isContrast){
        localStorage.contrast = isContrast
    } else{
        localStorage.clear()
    }
}

//# sourceMappingURL=../sourcemaps/main.min.js.map
